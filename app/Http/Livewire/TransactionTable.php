<?php

namespace App\Http\Livewire;

use App\Models\User;
use Illuminate\Database\Eloquent\Builder;
use Rappasoft\LaravelLivewireTables\DataTableComponent;
use Rappasoft\LaravelLivewireTables\Views\Column;
use App\Models\Transaction;

class TransactionTable extends DataTableComponent
{
    protected $model = Transaction::class;

    public function configure(): void
    {
        $this->setPrimaryKey('id');
    }

    public function columns(): array
    {
        return [
            Column::make(__('table.no'), "id")
                ->format(function () {
                    return ++$this->index;
                }),
            Column::make("Transaction type", "transaction_type")
                ->format(function ($value, $row, $column){
                    return view('staff.layouts.includes._transaction_type',['type'=>$value]);
                }),
            Column::make("From", "from")
                ->sortable(),
            Column::make("Description", "description")
                ->sortable(),
            Column::make("Amount", "amount")
                ->format(function ($value, $row, $column){
                    return "TZS $value";
                }),
            Column::make("Created at", "created_at")
                ->sortable(),
            Column::make("Updated at", "updated_at")
                ->sortable(),
        ];
    }

    public function builder(): Builder
    {
        $this->index = $this->page > 1 ? ($this->page - 1) * $this->perPage : 0;
        return Transaction::query()->select(['id','user_id','transaction_type','from','description','amount'])->orderBy('id','desc'); // TODO: Change the autogenerated stub
    }
}
