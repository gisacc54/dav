<?php

namespace App\Http\Livewire;

use App\Helper\FunctionHelper;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Builder;
use Rappasoft\LaravelLivewireTables\DataTableComponent;
use Rappasoft\LaravelLivewireTables\Views\Column;
use App\Models\User;

class UsersTable extends DataTableComponent
{
    protected $model = User::class;
    public ?string $search ;

    public function configure(): void
    {
        $this->setPrimaryKey('id');
        $this->setColumnSelectStatus(false);
    }

    public function columns(): array
    {
        return [
            Column::make(__('table.no'), "id")
                ->format(function () {
                    return ++$this->index;
                }),
            Column::make(__('table.user'),'first_name')
                ->sortable()
                ->searchable()
                ->format(function ($value, $row, $column){
                    return view('admin.layouts.includes._user-info',['user'=>$row]);
                }),
            Column::make(__('table.phone-number'), "phone_number")
                ->searchable()
                ->sortable(),
            Column::make(__('table.role'), "role_id")
                ->sortable()
                ->format(function ($value, $row, $column){
                    return $row->role->name;
                }),
            Column::make(__('table.gender'), "gender")
                ->sortable()
                ->format(function ($value, $row, $column){
                    return view('layouts.includes._gender',['user'=>$row]);
                }),
            Column::make(__('table.age'), "dob")
                ->sortable()
                ->format(function ($value, $row, $column){
                    return Carbon::parse($value)->age;
                }),
            Column::make(__('table.status'), "status")
                ->sortable()
                ->format(function ($value, $row, $column){
                    return view('admin.layouts.includes._status',['user'=>$row]);
                }),
            Column::make(__('table.registered-at'), "created_at")
                ->sortable()
                ->format(function ($value){
                    return FunctionHelper::formatDate($value);
                }),
            Column::make(__('table.actions'), "id")
                ->format(function ($value, $row, $column){
                    return view('layouts.includes._table-action-3',['updateLink'=>'/admin/users/'.$value.'/update','viewLink'=>'/admin/account/'.$value]);
                }),
        ];
    }

    public function builder(): Builder
    {
        $this->index = $this->page > 1 ? ($this->page - 1) * $this->perPage : 0;
        return User::query()->select(['id','username','last_name','profile_image','email','profile_image_thumbnail']); // TODO: Change the autogenerated stub
    }
}
